{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to CHESS QM2 Beamline Documentation! \u00b6 The QM2 beamline is optimized to uncover intertwined quantum correlations of spins, charges and orbitals, over a wide temperature range and spanning entire phase diagrams. For full documentation of beamline capabilities, please visit QM2 beamline . This documents is a collection of codes usefull for the beamline ID4B at CHESS. If you encounter with any bug or like to have additional functionality, please submit an issue. User Documentations \u00b6 SPEC_commands ID4B - Showes important SPEC commands needed for the beamline. SPEC macros - Important SPEC macros needed for the beamline. Data processing - Discuss the single crystal processing codes. Sample alignment \u00b6 Sample Alignmanet : Steps to align the user samples for Q-mapping and REXS. Admin Docuentation \u00b6 Beamline Setup : Hardware information Device configuration : Detector information Publications -List of publications from QM2 beamline.","title":"Home"},{"location":"#welcome-to-chess-qm2-beamline-documentation","text":"The QM2 beamline is optimized to uncover intertwined quantum correlations of spins, charges and orbitals, over a wide temperature range and spanning entire phase diagrams. For full documentation of beamline capabilities, please visit QM2 beamline . This documents is a collection of codes usefull for the beamline ID4B at CHESS. If you encounter with any bug or like to have additional functionality, please submit an issue.","title":"Welcome to CHESS QM2 Beamline Documentation!"},{"location":"#user-documentations","text":"SPEC_commands ID4B - Showes important SPEC commands needed for the beamline. SPEC macros - Important SPEC macros needed for the beamline. Data processing - Discuss the single crystal processing codes.","title":"User Documentations"},{"location":"#sample-alignment","text":"Sample Alignmanet : Steps to align the user samples for Q-mapping and REXS.","title":"Sample alignment"},{"location":"#admin-docuentation","text":"Beamline Setup : Hardware information Device configuration : Detector information Publications -List of publications from QM2 beamline.","title":"Admin Docuentation"},{"location":"ID4B_Codes/","text":"Welcome to data processing Codes \u00b6 NOTE Single crystal data-processing codes are written by Dr. Jacob Ruff based on reference [1] H. You, J. Appl. Cryst.(1999).32, 614-623 and [2] W. R. & Levy, H. A. (1967). Acta Cryst. 22, 457\u2013464 Single crystal data-processing steps \u00b6 STEP I : Calibrate Detector & Beamline STEP II : Stack data STEP III : Find Bragg peaks STEP IV : Solve orientation matrix STEP V : Convert stacks of data to HKL volume Detailed Descriptions Step I : Calibrate Detector & Beamline \u00b6 After collecting data from CeO2, LaB6, we calibrate the date by using pyFAI-calib2. Referemce shown below Reference: pyFAI reference : pyFAI . pyFAI-calib2 : calibration_video Calibration of a diffraction setup using the Graphical User Interface (GUI) ``pyFAI-calib2`` # generates .poni and mask.edf files =========================================================================== STEP II : Stack data \u00b6 stack_em_all -python script (edit to point to calibration files and project) python stack_em_all_cbf_2022.py chem_formula sample_id spec_scan_num temperature =========================================================================== STEP III: Find Bragg peaks \u00b6 simple_peakfinder script python simple_peakfinder.py /full/path/to/stack/ 0.95 Would consider anything above 95% of max counts as a Bragg peak =========================================================================== STEP IV: Solve orientation matrix \u00b6 auto_ormfinder script python auto_ormfinder.py /full/path/to/stack/ peakfilename.nxs =========================================================================== STEP V: Convert stacks of data to HKL volume \u00b6 Pil6M_HKLConv python script (edit to point to project, ormatrix, and define HKL grid) python Pil6M_HKLConv_3D_2022.py temperature ===========================================================================","title":"Data processing"},{"location":"ID4B_Codes/#welcome-to-data-processing-codes","text":"NOTE Single crystal data-processing codes are written by Dr. Jacob Ruff based on reference [1] H. You, J. Appl. Cryst.(1999).32, 614-623 and [2] W. R. & Levy, H. A. (1967). Acta Cryst. 22, 457\u2013464","title":"Welcome to data processing Codes"},{"location":"ID4B_Codes/#single-crystal-data-processing-steps","text":"STEP I : Calibrate Detector & Beamline STEP II : Stack data STEP III : Find Bragg peaks STEP IV : Solve orientation matrix STEP V : Convert stacks of data to HKL volume Detailed Descriptions","title":"Single crystal data-processing steps"},{"location":"ID4B_Codes/#step-i-calibrate-detector-beamline","text":"After collecting data from CeO2, LaB6, we calibrate the date by using pyFAI-calib2. Referemce shown below Reference: pyFAI reference : pyFAI . pyFAI-calib2 : calibration_video Calibration of a diffraction setup using the Graphical User Interface (GUI) ``pyFAI-calib2`` # generates .poni and mask.edf files ===========================================================================","title":"Step I :  Calibrate Detector &amp; Beamline"},{"location":"ID4B_Codes/#step-ii-stack-data","text":"stack_em_all -python script (edit to point to calibration files and project) python stack_em_all_cbf_2022.py chem_formula sample_id spec_scan_num temperature ===========================================================================","title":"STEP II :  Stack data"},{"location":"ID4B_Codes/#step-iii-find-bragg-peaks","text":"simple_peakfinder script python simple_peakfinder.py /full/path/to/stack/ 0.95 Would consider anything above 95% of max counts as a Bragg peak ===========================================================================","title":"STEP III:  Find Bragg peaks"},{"location":"ID4B_Codes/#step-iv-solve-orientation-matrix","text":"auto_ormfinder script python auto_ormfinder.py /full/path/to/stack/ peakfilename.nxs ===========================================================================","title":"STEP IV:  Solve orientation matrix"},{"location":"ID4B_Codes/#step-v-convert-stacks-of-data-to-hkl-volume","text":"Pil6M_HKLConv python script (edit to point to project, ormatrix, and define HKL grid) python Pil6M_HKLConv_3D_2022.py temperature ===========================================================================","title":"STEP V:  Convert stacks of data to HKL volume"},{"location":"SPEC_commands/","text":"Welcome to ID4B SPEC command \u00b6 SPEC Detailed Descriptions For full documentation visit certif.com . \"spec is internationally recognized as the leading software for instrument control and data acquisition in X-ray diffraction experiments.\" In ID4B, we used several SPEC along with python and C written by Dr. Jacob Ruff . Few important commands are shown below. For more information visit to the above mentioned website. For more information visit SPEC manual and SPEC macros Important SPEC commands \u00b6 mkdir - Create a new directotry. a2scan - two-motor scan. abscan - incident-reflected angle scan. br - br and ubr - move to the reciprocal space coordinates (HKL). ca - calculate motor settings for a given point in reciprocal space cal - calculate motor settings for a given point in reciprocal space cat - UNIX shell cat command cd - change working directory cmAX - Compumotor AX motor controller config - edit the hardware configuration config_adm - configuration - administer hardware configuration file constant - define a constant global symbol counting - timer/scaler commands, macros and variables cscan - Continuous Scans ct - count and print results dscan/lup - motor scan relative to the starting position d2scan - two-motor scan relative to the starting positions def - def and rdef - define a macro disable - disable and enable - Disable and Enable Hardware do - execute a command file dtscan - relative temperature scan dxp - XIA DXP CAMAC MCA encode - encode()/decode() - data stream manipulation epics - EPICS specific functions files - conventions for file/device output flow - flow control flyscan - Continuous Scans with Multichannel Scalers fourc - 4-circle geometry modes funcs - functions - built-in functions global - declare global variables hbeamscan - Horizontal direction beam scan based on start, finish, interval and time arrguments history - command recall facility hklscan - general linear scan in reciprocal space hscan - scan along the H-axis in reciprocal space install - spec installation procedure l - UNIX file listing libedit - libedit/readline - command line recall and editing lm - list motor software limits ls - UNIX file listing lscan - scan along the L-axis in reciprocal space macros - description of macro facility mk / umk - move to the reciprocal space coordinates (HKL) mono - monochromator - monochromator control macros motors - commands and functions for controlling motors move_info - move_info() - returns what would happen on a move mr - move to a given angle of specular reflection mv - mv and umv - move one motor mvd - move a motor in dial units mvr - mvr and umvr - move a single motor relative to its current position newvbeam - new beam position based on vertical beam or horizontal beam scan newfile - data file management newmac - re-read the standard macro definitions nu - ??????? os1 - optical slit 1?????? os2 - ?????? pwd - print spec's current working directory park6m - park the 6M PILATUS detector to 175m (x), 924.5m (y) and 200m (z) in directions qdo - execute a command file without echo rscan - specular reflectivity scan r2scan - reflectivity background scans readline - libedit/readline - command line recall and editing resume - continue an aborted scan roi - Region of Interest counters scans - scans and scans.4 - read data from ASCII spec data format scan files server - spec server/client - issue commands and control hardware remotely set - define the user angle of a motor set_dial - define the dial position of a motor set_lm - set lower and upper software limits set_sim - set simulate (no hardware) mode setplot - set plotting options setpowder - configure powder-averaged scans setscans - configure scan options showtemp - display the current temperature sixc - 6-circle geometry modes spec - spec, fourc, twoc, surf, etc. - X-ray diffractometer operation for specific configurations spec_menu - spec_menu() - create interactive menu from specifications spec_par - spec_par() - sets internal parameters te - read or set the temperature teramp - ramp the temperature to a new set point tscan - temperature scan tw - \"tweak\" motors tweakup - scan the monochromator in d direction (mond), go to the midlle and scan the undulator and move to the highest position unkludgenu - ?????? vi - invokes the standard UNIX visual editor vscan - Variable Step Size Scans vbeamscan - Vertical direction beam scan based on start, finish, interval and time arrguments w - wait for moving and counting and then beep wa - list all motor positions wait - wait() - synchronization with moving, counting and other activity wh - where, principal axes and reciprocal space whats - identify what an object is wm - print information about one or more motors wmono - where is monochromatic beam wmonoall - where motor and their position including the motors, phi and filters wmonoall - where is mirror position wot - where is optical tables ws1 - where is first slit ws1 - where is second slit w6m - where 6M detector wslits - where is both slit 1 and slit 2","title":"SPEC commands ID4B"},{"location":"SPEC_commands/#welcome-to-id4b-spec-command","text":"SPEC Detailed Descriptions For full documentation visit certif.com . \"spec is internationally recognized as the leading software for instrument control and data acquisition in X-ray diffraction experiments.\" In ID4B, we used several SPEC along with python and C written by Dr. Jacob Ruff . Few important commands are shown below. For more information visit to the above mentioned website. For more information visit SPEC manual and SPEC macros","title":"Welcome to ID4B SPEC command"},{"location":"SPEC_commands/#important-spec-commands","text":"mkdir - Create a new directotry. a2scan - two-motor scan. abscan - incident-reflected angle scan. br - br and ubr - move to the reciprocal space coordinates (HKL). ca - calculate motor settings for a given point in reciprocal space cal - calculate motor settings for a given point in reciprocal space cat - UNIX shell cat command cd - change working directory cmAX - Compumotor AX motor controller config - edit the hardware configuration config_adm - configuration - administer hardware configuration file constant - define a constant global symbol counting - timer/scaler commands, macros and variables cscan - Continuous Scans ct - count and print results dscan/lup - motor scan relative to the starting position d2scan - two-motor scan relative to the starting positions def - def and rdef - define a macro disable - disable and enable - Disable and Enable Hardware do - execute a command file dtscan - relative temperature scan dxp - XIA DXP CAMAC MCA encode - encode()/decode() - data stream manipulation epics - EPICS specific functions files - conventions for file/device output flow - flow control flyscan - Continuous Scans with Multichannel Scalers fourc - 4-circle geometry modes funcs - functions - built-in functions global - declare global variables hbeamscan - Horizontal direction beam scan based on start, finish, interval and time arrguments history - command recall facility hklscan - general linear scan in reciprocal space hscan - scan along the H-axis in reciprocal space install - spec installation procedure l - UNIX file listing libedit - libedit/readline - command line recall and editing lm - list motor software limits ls - UNIX file listing lscan - scan along the L-axis in reciprocal space macros - description of macro facility mk / umk - move to the reciprocal space coordinates (HKL) mono - monochromator - monochromator control macros motors - commands and functions for controlling motors move_info - move_info() - returns what would happen on a move mr - move to a given angle of specular reflection mv - mv and umv - move one motor mvd - move a motor in dial units mvr - mvr and umvr - move a single motor relative to its current position newvbeam - new beam position based on vertical beam or horizontal beam scan newfile - data file management newmac - re-read the standard macro definitions nu - ??????? os1 - optical slit 1?????? os2 - ?????? pwd - print spec's current working directory park6m - park the 6M PILATUS detector to 175m (x), 924.5m (y) and 200m (z) in directions qdo - execute a command file without echo rscan - specular reflectivity scan r2scan - reflectivity background scans readline - libedit/readline - command line recall and editing resume - continue an aborted scan roi - Region of Interest counters scans - scans and scans.4 - read data from ASCII spec data format scan files server - spec server/client - issue commands and control hardware remotely set - define the user angle of a motor set_dial - define the dial position of a motor set_lm - set lower and upper software limits set_sim - set simulate (no hardware) mode setplot - set plotting options setpowder - configure powder-averaged scans setscans - configure scan options showtemp - display the current temperature sixc - 6-circle geometry modes spec - spec, fourc, twoc, surf, etc. - X-ray diffractometer operation for specific configurations spec_menu - spec_menu() - create interactive menu from specifications spec_par - spec_par() - sets internal parameters te - read or set the temperature teramp - ramp the temperature to a new set point tscan - temperature scan tw - \"tweak\" motors tweakup - scan the monochromator in d direction (mond), go to the midlle and scan the undulator and move to the highest position unkludgenu - ?????? vi - invokes the standard UNIX visual editor vscan - Variable Step Size Scans vbeamscan - Vertical direction beam scan based on start, finish, interval and time arrguments w - wait for moving and counting and then beep wa - list all motor positions wait - wait() - synchronization with moving, counting and other activity wh - where, principal axes and reciprocal space whats - identify what an object is wm - print information about one or more motors wmono - where is monochromatic beam wmonoall - where motor and their position including the motors, phi and filters wmonoall - where is mirror position wot - where is optical tables ws1 - where is first slit ws1 - where is second slit w6m - where 6M detector wslits - where is both slit 1 and slit 2","title":"Important SPEC commands"},{"location":"SPEC_macros/","text":"Welcome to SPEC macros \u00b6 NOTE The code is written by Dr. Jacob Ruff based on SPEC certif.com . \"spec is internationally recognized as the leading software for instrument control and data acquisition in X-ray diffraction experiments.\" In ID4B, SPEC code is used along with python and C commands. ID4B beamline specific macros are shown below. Important SPEC commands for ID4B \u00b6 userlist.mac - Important macos needed for the users, delaied descrispotion are shown below. ``JRs_useful_macros.mac`` # generate SPEC macros for beam, motor and slit positions plotlast.mac # generate?? undulator_macro.mac # undulator stability syncmon.mac # syncronoze the system fmbo_filter.mac # filter macros digio.mac # diti? set_and_get_rois.mac # set ROI channels multi_pilatus_v5.mac # detector Lakeshore336cryocool.mac # Temperature macros energy_pv.mac # Energy macros undulator_2A.mac # Undulator stablibility macros Detailed description of macros The codes are in github repository Detailed description of macros \u00b6 JRs_useful_macros.mac 1. Define a macro vbeamscan based on passing four arrguments start, finish, interval and time parameter scans 2. Define a macro newbeam based on passing four arrguments start, finish, interval and time parameter scans 3. Define a macro hbeamscan based on passing four arrguments start, finish, interval and time parameter scans 4. Define a macro monocromator position def wmono 'wm monu mond monoff montrav mond_x monzu monzd monxu monxd' 5. Define a macro for mirror posiiton def wmirror 'wm mird miru mirbd mirbu' 6. Define a macro for optical table 7. Define a macro for slit position 8. Define a macro for tweakup the monochromator d position wby scanning both mond and undulator motors 9. Define where is 6M detectors 10. Define how to park the 6M detector","title":"SPEC macros"},{"location":"SPEC_macros/#welcome-to-spec-macros","text":"NOTE The code is written by Dr. Jacob Ruff based on SPEC certif.com . \"spec is internationally recognized as the leading software for instrument control and data acquisition in X-ray diffraction experiments.\" In ID4B, SPEC code is used along with python and C commands. ID4B beamline specific macros are shown below.","title":"Welcome to SPEC macros"},{"location":"SPEC_macros/#important-spec-commands-for-id4b","text":"userlist.mac - Important macos needed for the users, delaied descrispotion are shown below. ``JRs_useful_macros.mac`` # generate SPEC macros for beam, motor and slit positions plotlast.mac # generate?? undulator_macro.mac # undulator stability syncmon.mac # syncronoze the system fmbo_filter.mac # filter macros digio.mac # diti? set_and_get_rois.mac # set ROI channels multi_pilatus_v5.mac # detector Lakeshore336cryocool.mac # Temperature macros energy_pv.mac # Energy macros undulator_2A.mac # Undulator stablibility macros Detailed description of macros The codes are in github repository","title":"Important SPEC commands for ID4B"},{"location":"SPEC_macros/#detailed-description-of-macros","text":"JRs_useful_macros.mac 1. Define a macro vbeamscan based on passing four arrguments start, finish, interval and time parameter scans 2. Define a macro newbeam based on passing four arrguments start, finish, interval and time parameter scans 3. Define a macro hbeamscan based on passing four arrguments start, finish, interval and time parameter scans 4. Define a macro monocromator position def wmono 'wm monu mond monoff montrav mond_x monzu monzd monxu monxd' 5. Define a macro for mirror posiiton def wmirror 'wm mird miru mirbd mirbu' 6. Define a macro for optical table 7. Define a macro for slit position 8. Define a macro for tweakup the monochromator d position wby scanning both mond and undulator motors 9. Define where is 6M detectors 10. Define how to park the 6M detector","title":"Detailed description of macros"},{"location":"about/","text":"document is prepared by Suchismita Sarker \u00b6","title":"About"},{"location":"about/#document-is-prepared-by-suchismita-sarker","text":"","title":"document is prepared by Suchismita Sarker"},{"location":"publications/","text":"QM2 list of publications \u00b6","title":"Publication"},{"location":"publications/#qm2-list-of-publications","text":"","title":"QM2 list of publications"},{"location":"sample_alignment/","text":"Welcome to CHESS QM2 Sample Alignment \u00b6 Q-mapping \u00b6 Basic Theory \u00b6 REXS \u00b6 Basic Theory \u00b6","title":"Sample alignment"},{"location":"sample_alignment/#welcome-to-chess-qm2-sample-alignment","text":"","title":"Welcome to CHESS QM2 Sample Alignment"},{"location":"sample_alignment/#q-mapping","text":"","title":"Q-mapping"},{"location":"sample_alignment/#basic-theory","text":"","title":"Basic Theory"},{"location":"sample_alignment/#rexs","text":"","title":"REXS"},{"location":"sample_alignment/#basic-theory_1","text":"","title":"Basic Theory"}]}